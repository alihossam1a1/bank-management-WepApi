// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bank_management.data;

#nullable disable

namespace bank_management.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250122100354_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("bank_management.models.account", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("account_number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int?>("customerid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("customerid");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("bank_management.models.bankcard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cardnumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("customerid")
                        .HasColumnType("int");

                    b.Property<DateTime>("expirydate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("bankcards");
                });

            modelBuilder.Entity("bank_management.models.branch", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("bank_management.models.customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("bankcardid")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("id");

                    b.HasIndex("bankcardid")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("bank_management.models.employee", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("bank_management.models.transaction", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("account_id")
                        .HasColumnType("int");

                    b.Property<int?>("accountid")
                        .HasColumnType("int");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("accountid");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("branchemployee", b =>
                {
                    b.Property<int>("branchid")
                        .HasColumnType("int");

                    b.Property<int>("employeesid")
                        .HasColumnType("int");

                    b.HasKey("branchid", "employeesid");

                    b.HasIndex("employeesid");

                    b.ToTable("branchemployee");
                });

            modelBuilder.Entity("bank_management.models.account", b =>
                {
                    b.HasOne("bank_management.models.customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerid");

                    b.Navigation("customer");
                });

            modelBuilder.Entity("bank_management.models.customer", b =>
                {
                    b.HasOne("bank_management.models.bankcard", "bankcard")
                        .WithOne("customer")
                        .HasForeignKey("bank_management.models.customer", "bankcardid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bankcard");
                });

            modelBuilder.Entity("bank_management.models.transaction", b =>
                {
                    b.HasOne("bank_management.models.account", "account")
                        .WithMany("transactions")
                        .HasForeignKey("accountid");

                    b.Navigation("account");
                });

            modelBuilder.Entity("branchemployee", b =>
                {
                    b.HasOne("bank_management.models.branch", null)
                        .WithMany()
                        .HasForeignKey("branchid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bank_management.models.employee", null)
                        .WithMany()
                        .HasForeignKey("employeesid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bank_management.models.account", b =>
                {
                    b.Navigation("transactions");
                });

            modelBuilder.Entity("bank_management.models.bankcard", b =>
                {
                    b.Navigation("customer");
                });
#pragma warning restore 612, 618
        }
    }
}
